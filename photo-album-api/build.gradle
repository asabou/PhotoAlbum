plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.tpjad.project'
version = '1.0'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://plugins.gradle.org/m2/"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
	implementation group: 'com.auth0', name: 'java-jwt', version: '3.18.2'
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.0.0'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.0.0'
}

test {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.6"
}

jacocoTestReport {
	reports {
		xml.enabled = true
		csv.enabled = true
		html.enabled = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'com/tpjad/project/photoalbumapi/dao/**',
							'com/tpjad/project/photoalbumapi/resource/**',
							'com/tpjad/project/photoalbumapi/exceptions/**',
							'com/tpjad/project/photoalbumapi/security/**',
							'com/tpjad/project/photoalbumapi/utils/**',
							'com/tpjad/project/photoalbumapi/service/model'
					]
			)
		}))
	}
}

test.finalizedBy jacocoTestReport
